services:
  arangodb:
    image: arangodb:3.8.4
    platform: linux/amd64
    expose:
      - "8529"
    container_name: "arangodb"
    ports:
      - "8529:8529"
    env_file:
      - .env
    entrypoint: /entrypoint.sh
    command: --query.optimizer-rules "-splice-subqueries"
    volumes:
      - dbdata:/var/lib/arangodb3
    restart: always

  dataloader:
    build:
      context: .
      dockerfile: ./setup/Dockerfile-dataloader
    platform: linux/amd64
    container_name: "dataloader"
    volumes:
      - .:/opt/buddhanexus
      - type: volume
        source: dharmanexus-data
        target: /data
      - type: bind
        source: $LOCAL_MATCHES_PATH
        target: /data/matches/
    env_file:
      - .env
    links:
      - "arangodb"
    depends_on:
      - arangodb
    restart: always

  fastapi:
    build:
      context: .
      dockerfile: ./setup/Dockerfile-fastapi
    platform: linux/amd64
    container_name: "fastapi"
    ports:
      - "8000:8000"
    volumes:
      - .:/opt/buddhanexus
      - type: volume
        source: dharmanexus-data
        target: /data
    env_file:
      - .env
    environment:
      - PROD=0
    command: uvicorn --host 0.0.0.0 api.main:APP --reload
    restart: always
    depends_on:
      - arangodb

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: dev.Dockerfile

    # Set environment variables directly in the docker-compose file
    environment:
      NEXT_PUBLIC_DOWNLOAD_URL: ${NEXT_PUBLIC_DOWNLOAD_URL}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}

    # Set environment variables based on the .env file
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: always
    ports:
      - "3000:3000"

volumes:
  dbdata:
  dharmanexus-data:
    external: true