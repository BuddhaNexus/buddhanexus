services:
  arangodb:
    image: arangodb:3.12.3
    platform: linux/amd64
    #platform: linux/arm64/v8 # Use this instead if you want to use it on m1+ macs
    expose:
      - "8529"
    container_name: "arangodb"
    ports:
      - "8529:8529"
    env_file:
      - .env
    entrypoint: /entrypoint.sh
    command: --query.optimizer-rules "-splice-subqueries"
    volumes:
      - dbdata:/var/lib/arangodb3
    networks:
      - app-network
    restart: always

  dataloader:
    build:
      context: .
      dockerfile: ./setup/Dockerfile-dataloader
      platforms:
        - linux/amd64
        - linux/arm64/v8
    container_name: "dataloader"
    volumes:
      - .:/opt/buddhanexus
      - type: volume
        source: dharmanexus-data
        target: /data
      - type: bind
        source: $LOCAL_MATCHES_PATH
        target: /data/matches/
    env_file:
      - .env
    links:
      - "arangodb"
    depends_on:
      - arangodb
    networks:
      - app-network      
    restart: always

  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./api/redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always

  fastapi:
    build:
      context: .
      dockerfile: ./setup/Dockerfile-fastapi
      platforms:
        - linux/amd64
        - linux/arm64/v8
    container_name: "fastapi"
    ports:
      - "8000:8000"
    volumes:
      - .:/opt/buddhanexus
      - type: volume
        source: dharmanexus-data
        target: /data
    env_file:
      - .env
    environment:
      - PROD=0
    command: uvicorn --host 0.0.0.0 api.main:APP --reload
    restart: always
    depends_on:
      - arangodb
      - redis
    networks:
      - app-network

  tests:
    build:
      context: .
      dockerfile: ./setup/Dockerfile-fastapi
      platforms:
        - linux/amd64
        - linux/arm64/v8
    container_name: "tests"
    volumes:
      - .:/opt/buddhanexus
      - type: volume
        source: dharmanexus-data
        target: /data
    env_file:
      - .env
    environment:
      - PROD=0
      - PYTHONPATH=/opt/buddhanexus
    command: pytest -v
    depends_on:
      - arangodb
  

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: dev.Dockerfile

    # Set environment variables directly in the docker-compose file
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}

    # Set environment variables based on the .env file
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: always
    ports:
      - "3000:3000"

volumes:
  dbdata:
  dharmanexus-data:
    external: true
  redis_data:

networks:
  app-network:
    driver: bridge

