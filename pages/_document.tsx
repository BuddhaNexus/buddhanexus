import React from "react";
import Document, {
  DocumentContext,
  Html,
  Main,
  Head,
  NextScript,
} from "next/document";
import { ServerStyleSheets } from "@mui/styles";
import { ServerStyleSheet } from "styled-components";

export default class MyDocument extends Document {
  static async getInitialProps(ctx: DocumentContext) {
    const styledComponentsSheet = new ServerStyleSheet();
    const materialSheets = new ServerStyleSheets();
    const originalRenderPage = ctx.renderPage;

    try {
      ctx.renderPage = () =>
        originalRenderPage({
          enhanceApp: (App) => (props) =>
            materialSheets.collect(
              styledComponentsSheet.collectStyles(<App {...props} />)
            ),
        });

      const initialProps = await Document.getInitialProps(ctx);

      return {
        ...initialProps,
        styles: (
          <React.Fragment>
            {initialProps.styles}
            <style
              id="jss-server-side"
              nonce={process.env.nonce}
              dangerouslySetInnerHTML={{ __html: materialSheets.toString() }}
            />
            {styledComponentsSheet.getStyleElement()}
          </React.Fragment>
        ),
      };
    } finally {
      styledComponentsSheet.seal();
    }
  }

  render(): JSX.Element {
    return (
      <Html>
        <Head nonce={process.env.nonce}>
          <script
            nonce={process.env.nonce}
            dangerouslySetInnerHTML={{
              __html: `window.__webpack_nonce__ = '${process.env.nonce}'`,
            }}
          />
          <meta property="csp-nonce" content={process.env.nonce} />
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <meta name="theme-color" content="#f2f2f2" />
        </Head>

        <body>
          <Main />
          <NextScript nonce={process.env.nonce} />
        </body>
      </Html>
    );
  }
}
